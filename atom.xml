<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
   <title>WebCraft</title>
   <link href="http://webcraft.malei.tk/atom.xml" rel="self" type="application/atom+xml"/>
   <link href="http://webcraft.malei.tk" rel="alternate" type="text/html" />
   <updated>2013-08-21T09:54:55+08:00</updated>
   <id>http://webcraft.malei.tk</id>
   <author>
     <name>Lei Ma</name>
     <email>leiman0311@gmail.com</email>
   </author>

   
   <entry>
     <title>Some Interesting Terminal Command in Linux</title>
     <link href="http://webcraft.malei.tk/articles/some-insteresting-terminal-commands"/>
     <updated>2013-08-20T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/some-insteresting-terminal-commands</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;p&gt;在 linux 的终端中，好多有意思的东西，那就尝试一下吧！&lt;/p&gt;

&lt;h2&gt;Commands list&lt;/h2&gt;

&lt;h3&gt;Irssi&lt;/h3&gt;

&lt;p&gt;一个 IRC 客户端，&lt;a href=&quot;/articles/a-brief-introduce-to-irc/&quot;&gt;上篇文章&lt;/a&gt;有详细介绍&lt;/p&gt;

&lt;h3&gt;Finch&lt;/h3&gt;

&lt;p&gt;pidgin 的终端版本:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;┌─────┤好友列表├──────┐             
│+ 好友             ▒│                                                         
│+ 网络中心          ▒│                                                          
│+ 高中同学          ▒│                                                        
│+ 大学同学           ▒┌┤大学同学├┐                                              
│+ 聊天              ▒│在线：8    │                                       
│                   ▒│总计：36   │                                    
│                   ▒└──────────┘ 
│                   ▒│                                              
│                   ▒│                                            
│                   ▒│
│                   ▒│
│                   ▒│
│                    │                                                         
│┌──────────────────┐│                                 
││可用              ↓││
│└──────────────────┘│                                                       
│____________________│
└────────────────────┘
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Fortune&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install fortune
$ fortune
In Marseilles they make half the toilet soap we consume in America, but
the Marseillaise only have a vague theoretical idea of its use, which they
have obtained from books of travel.
                -- Mark Twain
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Figlet &amp;amp;&amp;amp; Toilet&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install figlet
$ figlet WEBCRAFT
__        _______ ____   ____ ____      _    _____ _____ 
\ \      / / ____| __ ) / ___|  _ \    / \  |  ___|_   _|
 \ \ /\ / /|  _| |  _ \| |   | |_) |  / _ \ | |_    | |  
  \ V  V / | |___| |_) | |___|  _ &amp;lt;  / ___ \|  _|   | |  
   \_/\_/  |_____|____/ \____|_| \_\/_/   \_\_|     |_|  

$ cd /usr/share/figlet
$ figlet -f ascii12.tlf -w 100 WEBCRAFT

'mm      mm mmmmmmmm  mmmmmm       mmmm   mmmmmm       mm     mmmmmmmm  mmmmmmmm 
 ##      ## ##&quot;&quot;&quot;&quot;&quot;&quot;  ##&quot;&quot;&quot;&quot;##   ##&quot;&quot;&quot;&quot;#  ##&quot;&quot;&quot;&quot;##    ####    ##&quot;&quot;&quot;&quot;&quot;&quot;  &quot;&quot;&quot;##&quot;&quot;&quot; 
 &quot;#m ## m#&quot; ##        ##    ##  ##&quot;       ##    ##    ####    ##           ##    
  ## ## ##  #######   #######   ##        #######    ##  ##   #######      ##    
  ###&quot;&quot;###  ##        ##    ##  ##m       ##  &quot;##m   ######   ##           ##    
  ###  ###  ##mmmmmm  ##mmmm##   ##mmmm#  ##    ##  m##  ##m  ##           ##    
  &quot;&quot;&quot;  &quot;&quot;&quot;  &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;  &quot;&quot;&quot;&quot;&quot;&quot;&quot;      &quot;&quot;&quot;&quot;   &quot;&quot;    &quot;&quot;&quot; &quot;&quot;    &quot;&quot;  &quot;&quot;           &quot;&quot;' 
$ ls // 可以看见字体
$ toilet -f mono9.tlf -F metal WEBCRAFT

▄     ▄ ▄▄▄▄▄▄ ▄▄▄▄▄    ▄▄▄  ▄▄▄▄▄    ▄▄   ▄▄▄▄▄▄▄▄▄▄▄▄▄
█  █  █ █      █    █ ▄▀   ▀ █   ▀█   ██   █        █   
▀ █▀█ █ █▄▄▄▄▄ █▄▄▄▄▀ █      █▄▄▄▄▀  █  █  █▄▄▄▄▄   █   
 ██ ██▀ █      █    █ █      █   ▀▄  █▄▄█  █        █   
 █   █  █▄▄▄▄▄ █▄▄▄▄▀  ▀▄▄▄▀ █    ▀ █    █ █        █   
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Cowsay &amp;amp;&amp;amp; Cowthink&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;-d   死掉的母牛&lt;/li&gt;
&lt;li&gt;-b   瞎眼母牛？&lt;/li&gt;
&lt;li&gt;-g   财迷母牛&lt;/li&gt;
&lt;li&gt;-p   多疑的母牛&lt;/li&gt;
&lt;li&gt;-s   喝醉的母牛&lt;/li&gt;
&lt;li&gt;-t   疲劳母牛&lt;/li&gt;
&lt;li&gt;-w   吃惊的母牛&lt;/li&gt;
&lt;li&gt;-y   小母牛&lt;/li&gt;
&lt;/ul&gt;


&lt;pre&gt;&lt;code&gt;$ sudo apt-get install cowsay
$ cd /usr/share/cowsay/cows &amp;amp;&amp;amp; ls // you will see all files
// or
$ cowsay -l // you will see also
$ uptime | cowsay -f kiss
 _____________________________________
/  23:56:10 up 5 days, 1:23, 6 users, \
\ load average: 1.22, 1.16, 1.17      /
 -------------------------------------
     \
      \
             ,;;;;;;;,
            ;;;;;;;;;;;,
           ;;;;;'_____;'
           ;;;(/))))|((\
           _;;((((((|))))
          / |_\\\\\\\\\\\\
     .--~(  \ ~))))))))))))
    /     \  `\-(((((((((((\\
    |    | `\   ) |\       /|)
     |    |  `. _/  \_____/ |
      |    , `\~            /
       |    \  \           /
      | `.   `\|          /
      |   ~-   `\        /
       \____~._/~ -_,   (\
        |-----|\   \    ';;
       |      | :;;;'     \
      |  /    |            |
      |       |            |
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Cmatrix&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install cmatrix
$ cmatrix
// it's cool
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Jp2a&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install jp2a
$ jp2a --width=50 logoOfshijiazhuangTieDaoUniversity.jpg

&quot;NWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWN
 WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW
 WMMMMMMMMMMMMMMMMMW0ko:;,;::',;cdOXMMMMMMMMMMMMMMW
 WMMMMMMMMMMMMMMXd;.;oc..'clc...,d:.'ckWMMMMMMMMMMW
 WMMMMMMMMMMMMO:o'..,o,:odkkOxdll:.....,lXMMMMMMMMW
 WMMMMMMMMMMK;..,d:ck0Odc;,,,;:lx00d;:o:..lWMMMMMMW
 WMMMMMMMMMd;:'..oXk;''',lxk0000Oxod00:.',:cXMMMMMW
 WMMMMMMMMo.;o,;XO,'',dXMMMMMMMMMMMMWXMk:cc;'KMMMMW
 WMMMMMMMO...,:Wo'''dWMXkkkkkkkkkkNMMMMM0....,WMMMW
 WMMMMMMM;....Xk'''kMMWdc''lo,';o''KMMMMMo....xMMMW
 WMMMMMMN....;Ml;;:MMMM0,'OWl'cWM,'0MMMMMK....cMMMW
 WMMMMMMN.';.;MMMMMMMMk';XW:'oMNc'oMXlll0K.,;.cMMMW
 WMMMMMMM,;o,.NMMMMMMo':NX;':xc':0MMl'''Xx.:,.dMMMW
 WMMMMMMMx.::.cMMMMMKxkWWdoodx0NMMWo'''xX',l,'NMMMW
 WMMMMMMMMc':;.cWWWMMMMMMMMMMMMMWk;'',OK,'l;.OMMMMW
 WMMMMMMMMWc'c;',kKkxOKNWWWNXOxc''',dKo.,c;'OMMMMMW
 WMMMMMMMMMMk',l;',d0Oo:''''''',cdOOc.,:c';XMMMMMMW
 WMMMMMMMMMMMWd';;c;'':oxkkkkkkxl;..;:c';OMMMMMMMMW
 WMMMMMMMMMMMMMWOc,;;;..;,,;';':::...,oKMMMMMMMMMMW
 WMMMMMMMMMMMMMMMMWKxl:,,'':';',;coOXMMMMMMMMMMMMMW
 WMMMMMMMMMMMMMMMMMMMMMMMWNXNNWMMMMMMMMMMMMMMMMMMMW
 WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW
 NWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWN&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Bb&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install bb
$ bb // amazing!!!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Over&lt;/h2&gt;

&lt;p&gt;Oops!!!&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>A Brief Introduction to IRC</title>
     <link href="http://webcraft.malei.tk/articles/a-brief-introduce-to-irc"/>
     <updated>2013-08-19T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/a-brief-introduce-to-irc</id>
     <content type="html">&lt;h2&gt;声明&lt;/h2&gt;

&lt;p&gt;thanks &lt;a href=&quot;http://weibo.com/jianingy&quot;&gt;@jianingy&lt;/a&gt; 的总结&amp;amp;教程，以下正文:&lt;/p&gt;

&lt;h2&gt;简介&lt;/h2&gt;

&lt;p&gt;IRC 的全称是 Internet Relay Chat。它是一个多人、多频道实时聊天系统。通
俗地讲就是我们平常说的“网络聊天室”。功能上类似于腾讯的“QQ群”。然而 IRC
开放的通讯协议不但使得它可以被广泛使用于各个平台的系统，也让它的周边软
件和生态系统变得非常繁茂。&lt;/p&gt;

&lt;p&gt;目前全球有很多免费的 IRC 服务网络，例如 freenode, oftc 等等。因此你不
用花费任何额外的费用就能和全球各地的朋友在大家感兴趣的频道里畅所欲言。&lt;/p&gt;

&lt;h2&gt;起源&lt;/h2&gt;

&lt;p&gt;IRC 的发明人是芬兰小伙 Jarkko Oikarinen。
他在 Oulu 读大学的时候受到一个叫 Bitnet Relay 聊天系统的启发，开发了
IRC 系统。&lt;/p&gt;

&lt;h2&gt;架构&lt;/h2&gt;

&lt;p&gt;IRC 是一个 CS 模式的系统（服务器、客户端模式）。你需要一个专用的客户端
软件连接到 IRC 服务器上。如今，这类客户端软件已经发展到几十种，其中不乏
非常优秀的开源软件。本文下面的内容会基于一个叫做 /Irssi/
(http://irssi.org/) 的客户端软件进行介绍。&lt;/p&gt;

&lt;p&gt;IRC 名字中的 Relay 暗示了其服务端是以消息中继形态构成的。用户的消息可以
在一个 IRC 网络中的多个 IRC 服务器之间进行转发。这样做的好处是无论你登陆
该网络的哪个 IRC 服务器，你都可以和所有其他用户进行交流。例如：你登陆了新加坡
的 brooks.freenode.net 而你的朋友登陆了巴黎的 barjavel.freenode.net，你
们仍然可以在一个频道里聊天。&lt;/p&gt;

&lt;h2&gt;基本操作&lt;/h2&gt;

&lt;h3&gt;安装客户端软件&lt;/h3&gt;

&lt;p&gt;在我们进行下面的讲解之前，你首先需要安装一下 /irssi/ 这个客户端软件。下
面我会给出几种主流系统的客户端软件安装方法。&lt;/p&gt;

&lt;h4&gt;Ubuntu Linux / Debian Linux&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install irssi
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Fedora / CentOS / Redhat Linux&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install irssi
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;MacOSX&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;brew install irssi
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;IRSSI 的界面布局&lt;/h3&gt;

&lt;p&gt;首先我们在命令行下键入 /irssi/ 来启动这个客户端程序，你会看到如下的界面：&lt;/p&gt;

&lt;p&gt;靠下方蓝色的部分是状态条，他把屏幕分成其上方的主区域和命令区域两个部分。
我们在主区域里会看到聊天的内容以及服务器发送的信息。在命令区域里输入我
们想发送的内容或者是以 &quot;/&quot; 开头的 IRC 命令。&lt;/p&gt;

&lt;h3&gt;登陆 IRC 服务器&lt;/h3&gt;

&lt;p&gt;下面让我们来登陆一个 IRC 服务器。在命令区域输入 &lt;code&gt;/connect
irc.freenode.net&lt;/code&gt; 。连接成功后，我们会看到服务器返回的 MOTD 信息。
/irssi/ 会自动用你登陆用户的用户名作为昵称登陆服务器。如果你看到下面的
信息，则说明你的昵称已经有人使用了。这时 /irssi/ 会为你自动生成一个昵称。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;16:52 -!- Irssi: Your nick is owned by Jianing Yang [~jianingy@106.3.xx.yy]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;设置昵称&lt;/h3&gt;

&lt;p&gt;默认的昵称是你的 linux 登录名，如果你用虚拟机登录，很可能是 ubuntu 或 root 之类。使用 &lt;code&gt;/nick &amp;lt;yourname&amp;gt;&lt;/code&gt; 来更改昵称。后面有教程教你注册昵称确保这个昵称只是你在使用。&lt;/p&gt;

&lt;h3&gt;加入、创建聊天频道&lt;/h3&gt;

&lt;p&gt;使用命令 &lt;code&gt;/join&lt;/code&gt; 来加入一个频道。如果该频道还不存在，那么系统会自动创建
一个新的频道。频道名一般都是以 &lt;code&gt;#&lt;/code&gt; 开头的。例如：要加入 openstack 频道，
我们可以使用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/join #openstack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加入频道后，在主区域会看到频道中已有用户的信息、以及频道的主题（topic）。
你可以持续使用 join 命令加入多个频道。&lt;code&gt;/irssi/&lt;/code&gt; 会为每一个频道分配一个窗
口（window），每个窗口会有一个窗口编号。我们可以使用 &lt;code&gt;/win&lt;/code&gt; 命令来切换不
同的窗口。例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/win 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果窗口太多，或者你忘记了窗口号码，也可以用 &lt;code&gt;/join&lt;/code&gt; 命令来切换到相应的频
道。&lt;/p&gt;

&lt;h3&gt;信息提示&lt;/h3&gt;

&lt;p&gt;如果你所加入的频道有新的消息，那么频道号码会以高亮方式显示出来。这时可
以使用 &lt;code&gt;/win&lt;/code&gt; 切换过去读新的消息。如果频道好码以红色高亮，说明有人在该频
道里提到了你的名字，这时你需要特别关注一下。&lt;/p&gt;

&lt;h3&gt;表情&lt;/h3&gt;

&lt;p&gt;IRC 并不是真正支持发送什么表情，它只是提供一种专门用来做表情的命令
&lt;code&gt;/me + 表情&lt;/code&gt; 。当你使用这个命令发送信息时，大部分客户端都会以缩进或高亮
的方式来消息。当你看到表情消息时，你只能脑补一下了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;17:18  * jianingy is confused
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;私聊&lt;/h3&gt;

&lt;p&gt;IRC 鼓励大家在公开频道聊天。任何问题的讨论对每一个在频道里的人都是透明
的。然而，你还是偶尔可能想跟某个人单独对话。这个时候可以使用 &lt;code&gt;/query&lt;/code&gt; 命令。例如：你想要单独和 /jianingy/ 聊两句&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/query jianingy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;irssi 会为你俩创建一个单独的窗口。聊天的内容只有你俩能看到。但是千万不
要以为这是你发送密码的好手段。因为 IRC 的协议是明文的，因此你所发送的
内容还是会被网络上的嗅探器看到[fn:1]。&lt;/p&gt;

&lt;p&gt;[fn:1] 如果你使用的是基于 SSL 协议的 IRC 这个问题到不用特别担心。&lt;/p&gt;

&lt;h3&gt;离开频道&lt;/h3&gt;

&lt;p&gt;当你决定要退出一个频道时，使用 &lt;code&gt;/leave + 频道名称&lt;/code&gt; 命令退出频道。如果
当前窗口就是你所在的频道，那么这个命令就可以简写为 &lt;code&gt;/leave&lt;/code&gt; 。&lt;/p&gt;

&lt;h2&gt;阶进操作&lt;/h2&gt;

&lt;h3&gt;挂机&lt;/h3&gt;

&lt;p&gt;如果你经常出没于 freenode 等 IRC ，你会发现很多人常年在线从未退出过。这
是因为他们使用了一个叫做 /screen/ 的工具挂机。下面简单介绍一下这种挂机
的方法。然而这并不是一个讨论 /screen/ 的专题，因此这里仅仅介绍一些基本
的用法。&lt;/p&gt;

&lt;p&gt;首先，你需要找一个常年开机的服务器或者 VPS 虚拟机 。在这台服务器上通过
/screen/ 命令启动一个 /irssi/ 程序，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;screen irssi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当你离开时，你可以直接关掉终端窗口或者使用快捷键 &lt;code&gt;Control + a d&lt;/code&gt; 退出
/screen/ 。这时 /irssi/ 仍然会以后台方式运行在 /screen/ 中。当你再次登
录的时候，可以使用下面的命令重新回到之前的 /irssi/ 操作界面。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;screen -R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如此一来你将不用担心漏掉 IRC 上的消息。你可以告诉朋友们：“给我在 IRC
上留言”。你可以在任何能够登录你服务器的地方看到那些未读的消息。&lt;/p&gt;

&lt;h3&gt;注册昵称&lt;/h3&gt;

&lt;p&gt;在 IRC 的世界里，别人主要靠昵称来认识你。因此保护自己那特有的昵称不被占
用是非常重要的。IRC 网络通过一个叫 NickServ 的机器人来管理用户的昵
称。当需要注册昵称时，你只需要跟 NickServ 这个机器人私聊两句就可以了。&lt;/p&gt;

&lt;p&gt;首先， 通过 &lt;code&gt;/query NickServ&lt;/code&gt; 进入和 NickServ 私聊的模式并通过
&lt;code&gt;register&lt;/code&gt; 命令给出一个密码和你的邮箱。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;21:15 &amp;lt;jianingy&amp;gt; register mypassword mail@example.com
21:15 -NickServ(NickServ@services.)- An email containing nickname activation instructions has been sent to mail@example.com
21:15 -NickServ(NickServ@services.)- If you do not complete registration within one day, your nickname will expire.
21:15 -NickServ(NickServ@services.)- jianingy is now registered to mail@example.com, with the password mypassword.
21:15 -NickServ(NickServ@services.)-
21:15 -NickServ(NickServ@services.)- For frequently-asked questions about the network, please see the
21:15 -NickServ(NickServ@services.)- FAQ page (http://freenode.net/faq.shtml). Should you need more
21:15 -NickServ(NickServ@services.)- help you can /join #freenode to find network staff.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来，正如 NickServ 说，下面的步骤在他发给你的邮件中。这里我们剧透一
下，下一步需要做的就是讲邮件里的验证码通过 &lt;code&gt;verify register&lt;/code&gt; 命令告诉
NickServ:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;21:17 &amp;lt;jianingy&amp;gt; VERIFY REGISTER jianingy raufkqeuugns
21:17 -NickServ(NickServ@services.)- jianingy has now been verified.
21:17 -NickServ(NickServ@services.)- Thank you for verifying your e-mail address! You have taken steps in ensuring that your registrations are not exploited.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;昵称注册成功后，如果你发现别人占用了你的昵称，你可以通过 &lt;code&gt;ghost&lt;/code&gt; 命令
强制对方下线，在通过 &lt;code&gt;/nick&lt;/code&gt; 命令要回自己的昵称。 &lt;code&gt;ghost&lt;/code&gt; 命令的用法如
下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;21:34 &amp;lt;jianingy&amp;gt; ghost jianingy mypassword
21:34 -NickServ(NickServ@services.)- jianingy has been ghosted.
21:34 -NickServ(NickServ@services.)- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify &amp;lt;password&amp;gt;.
21:34 &amp;lt;jianingy&amp;gt; identify mypassword
21:34 -NickServ(NickServ@services.)- You are now identified for jianingy.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;UI 主题&lt;/h3&gt;

&lt;p&gt;别看 /Irssi/ 只是一款 CLI 软件，他也是有换肤支持的。网络上有很多爱好者
给 /Irssi/ 开发皮肤。皮肤文件是一个以 &lt;code&gt;.theme&lt;/code&gt; 结尾的文本文件。更换皮
肤的方法是，将下载好的皮肤文件放到 &lt;code&gt;~/.irssi/&lt;/code&gt; 这个目录下，然后运行如
下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/set theme 皮肤名称（即皮肤文件名去掉.theme）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你决定长久使用这款皮肤，就要通过 &lt;code&gt;/save&lt;/code&gt; 命令保存设置。&lt;/p&gt;

&lt;p&gt;这里给出两个 /irssi/ 的皮肤下载站：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.irssi.org/themes&quot;&gt;http://www.irssi.org/themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dotshare.it/category/chat/irssi/&quot;&gt;http://dotshare.it/category/chat/irssi/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;使用 Irssi 插件&lt;/h3&gt;

&lt;p&gt;毫无疑问像 /irssi/ 这么具有黑客范儿的程序一定是支持插件的。这些插件让
/irssi/ 的功能更为全面、强大。你可以在 &lt;a href=&quot;http://scripts.irssi.org&quot;&gt;http://scripts.irssi.org&lt;/a&gt; 找到很
多有用的插件。&lt;/p&gt;

&lt;p&gt;加载插件的方法是：把插件文件下载到 &lt;code&gt;~/.irssi/scripts&lt;/code&gt; 里面，然后在
/irssi/ 里执行命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/script load 插件名称
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你想让一个插件在 /irssi/ 启动的时候就被自动加载，就做一个符号链接
把该插件链接到 &lt;code&gt;~/.irssi/scripts/autorun&lt;/code&gt; 这个目录里面。&lt;/p&gt;

&lt;p&gt;其他和插件相关的命令还有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/script unload&lt;/code&gt; : 卸载一个插件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/script&lt;/code&gt; : 列出当前加载的插件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/script reset&lt;/code&gt; : 卸载所有插件，并且重置插件的 Perl 解释器。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;接下来介绍几个非常实用的插件：&lt;/p&gt;

&lt;h4&gt;adv_windowlist&lt;/h4&gt;

&lt;p&gt;下载地址：
&lt;a href=&quot;http://anti.teamidiot.de/static/nei/*/Code/Irssi/adv_windowlist.pl&quot;&gt;http://anti.teamidiot.de/static/nei/*/Code/Irssi/adv_windowlist.pl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;默认的 window list 只能显示一行。用了这个插件后 window list 可以显示多
行。特别适合那些加入频道比较多的朋友。&lt;/p&gt;

&lt;h4&gt;screen away&lt;/h4&gt;

&lt;p&gt;下载地址：&lt;a href=&quot;http://scripts.irssi.org/scripts/screen_away.pl&quot;&gt;http://scripts.irssi.org/scripts/screen_away.pl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在你 detach screen 的时候把你的 IRC 状态设置为 away。当你 attach 回来
时，将 away 状态取消。让频道里的人了解你是在挂机中还是在线中。&lt;/p&gt;

&lt;h4&gt;nickcolor&lt;/h4&gt;

&lt;p&gt;下载地址：&lt;a href=&quot;http://scripts.irssi.org/scripts/nickcolor.pl&quot;&gt;http://scripts.irssi.org/scripts/nickcolor.pl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;给频道里每个人的名字以不同颜色显示出来。方便你认清每一个人。&lt;/p&gt;

&lt;h4&gt;go&lt;/h4&gt;

&lt;p&gt;下载地址：&lt;a href=&quot;http://scripts.irssi.org/scripts/go.pl&quot;&gt;http://scripts.irssi.org/scripts/go.pl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使用 =/win= 命令切换窗口需要自己记住窗口号码和频道之间的关系。 =go= 让
我们可以直接使用频道名字切换窗口，并且还支持自动补齐功能。&lt;/p&gt;

&lt;h4&gt;trackbar&lt;/h4&gt;

&lt;p&gt;下载地址：&lt;a href=&quot;http://scripts.irssi.org/scripts/trackbar.pl&quot;&gt;http://scripts.irssi.org/scripts/trackbar.pl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在你上次浏览内容下方画一道横线。如果你同时看多个频道的话，这个插件非常
有用。他能帮你了解该频道自你上次浏览后有哪些新内容。&lt;/p&gt;

&lt;h4&gt;queryresume&lt;/h4&gt;

&lt;p&gt;下载地址：&lt;a href=&quot;http://scripts.irssi.org/scripts/queryresume.pl&quot;&gt;http://scripts.irssi.org/scripts/queryresume.pl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;每次跟人私聊的时候先显示上次你俩聊天时的最后几行。&lt;/p&gt;

&lt;h2&gt;小技巧&lt;/h2&gt;

&lt;h3&gt;命令别名&lt;/h3&gt;

&lt;p&gt;给命令设置短别名能极大提高我们的使用效率。 /irssi/ 中有一些内置的别名，
例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;别名      全称
/q       /query
/wc      /windowclose
/j       /join
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然， /irssi/ 也支持用户自定义别名。比如：我们要给 &lt;code&gt;/window list&lt;/code&gt; 命
令起个别名，就可以用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/alias wl window list
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;彩色文字&lt;/h3&gt;

&lt;p&gt;作为一个 CLI 程序，当然要支持最具表现力的彩色文字了。要想让你的话富有
色彩，先按下 &lt;code&gt;Control + C&lt;/code&gt; 看到输入区域出现一个反白的字母“C”之后输入一
个颜色数码，之后再输入的内容就可以带有相应的颜色了。&lt;/p&gt;

&lt;h3&gt;其他&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.irssi.org/documentation/tips&quot;&gt;http://www.irssi.org/documentation/tips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
   </entry>
   
   <entry>
     <title>郁闷的一天 大战 git review</title>
     <link href="http://webcraft.malei.tk/articles/solve-git-review-problem"/>
     <updated>2013-08-09T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/solve-git-review-problem</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;p&gt;伴着昨天的问题入睡啊，张开眼，随之而来的就是郁闷的一天。。。how  to get rid of it, let's go...&lt;/p&gt;

&lt;h2&gt;问题描述&lt;/h2&gt;

&lt;h3&gt;情况一 UnicodeEncodeError&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Traceback (most recent call last):
  File &quot;/usr/bin/git-review&quot;, line 1170, in &amp;lt;module&amp;gt;
    print(e)
UnicodeEncodeError: 'ascii' codec can't encode characters in position 180-183: ordinal not in range(128)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;just google it, you can get some resolution:&lt;/p&gt;

&lt;h4&gt;No.1 在文件的前几行加上，这里加在 /usr/bin/git-review 中&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;import sys
reload(sys)
sys.setdefaultencoding('utf-8')
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;No.2 号称可以重启后，也是 utf8 编码，可是在我这不 work。python的 /usr/local/lib/python2.7/site-packages 文件夹下新建一个 sitecustomize.py，内容为：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# encoding=utf8  
import sys  

reload(sys)  
sys.setdefaultencoding('utf8')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另外，ubuntu13.04 存在两个版本的 python:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;python 2.7.*;&lt;/li&gt;
&lt;li&gt;python 3.3.*&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;默认是 python2.7，默认编码 ascii； python3 默认编码 utf8&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /usr/bin &amp;amp;&amp;amp; ll python* // you will see details
// test default encoding
$ python
&amp;gt;&amp;gt;&amp;gt; import sys
&amp;gt;&amp;gt;&amp;gt; sys.getdefaultencoding() // 'ascii'

$ python3
&amp;gt;&amp;gt;&amp;gt; import sys
&amp;gt;&amp;gt;&amp;gt; sys.getdefaultencoding() // 'utf-8'
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;情况二&lt;/h3&gt;

&lt;p&gt;when I : &lt;code&gt;$ git review&lt;/code&gt; or &lt;code&gt;$ git review -s&lt;/code&gt; , it feedback me:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Problems encountered installing commit-msg hook
The following command failed with exit code 1
    &quot;scp -P None :hooks/commit-msg .git/hooks/commit-msg&quot;
-----------------------
cp: 无法获取&quot;:hooks/commit-msg&quot; 的文件状态(stat): 没有那个文件或目录
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;when I :  &lt;code&gt;ssh -p 29418 username@review.*****.com&lt;/code&gt; (username is your username of gerrit), it feedback me:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  ****    Welcome to Gerrit Code Review    ****

  Hi Ma Lei, you have successfully connected over SSH.

  Unfortunately, interactive shells are disabled.
  To clone a hosted Git repository, use:

  git clone ssh://malei0311@review.*****.com:29418/REPOSITORY_NAME.git

Connection to review.*****.com closed.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;so.....,how to do ?&lt;/p&gt;

&lt;p&gt;according to the feedback message:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp: 无法获取&quot;:hooks/commit-msg&quot; 的文件状态(stat): 没有那个文件或目录
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;let's just create the file &lt;code&gt;commit-msg&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ll .git/hooks/
// you will see commit-msg.sample
$ cd .git/hooks &amp;amp;&amp;amp; cp commit-msg.sample commit-msg &amp;amp;&amp;amp; cd -
$ git review // wow, success!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;结语&lt;/h2&gt;

&lt;p&gt;郁闷的一天，纠缠于 &lt;code&gt;git-review&lt;/code&gt;，唉，悲剧。。。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>shell 之重定向</title>
     <link href="http://webcraft.malei.tk/articles/linux-study-shell-redirect"/>
     <updated>2013-07-31T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/linux-study-shell-redirect</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;p&gt;在前面的文章学习 &lt;a href=&quot;/articles/screen-sh/&quot;&gt;screen&lt;/a&gt; 时，已经用过 &lt;code&gt;nohup&lt;/code&gt; 。不过，像那么用，每次他都会写入默认的 nohup.out 文件中，并且每次都是叠加的，这么就造成一个可见的丑陋的文件无休止的增大，( ︶︿︶)_╭∩╮，那么就让他隐藏吧....&lt;/p&gt;

&lt;h2&gt;开始&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;nohup python /home/malei/programs/goagent/local/proxy.py &amp;gt; .nohup.out 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就好了，看不见那个令人不愉快的文件，且每次都是重写的，不会变得相当大了，︵(@￣︶￣@)︵。这种写法是 重定向标准输出和错误到同一个文件，详情，如下 ⟱&lt;/p&gt;

&lt;h2&gt;重定向标准输出和错误到同一个文件&lt;/h2&gt;

&lt;h3&gt;旧版 shell&lt;/h3&gt;

&lt;p&gt;可能有这种情况，我们希望捕捉一个命令的所有输出到一个文件。为了完成这个，我们 必须同时重定向标准输出和标准错误。有两种方法来完成任务。第一个，传统的方法， 在旧版本 shell 中也有效：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ls -l /bin/usr &amp;gt; ls-output.txt 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用这种方法，我们完成两个重定向。首先重定向标准输出到文件 ls-output.txt，然后 重定向文件描述符2（标准错误）到文件描述符1（标准输出）使用表示法 &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;注意重定向的顺序安排非常重要。标准错误的重定向必须总是出现在标准输出 重定向之后，要不然它不起作用。上面的例子，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;ls-output.txt 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重定向标准错误到文件 ls-output.txt，但是如果命令顺序改为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2&amp;gt;&amp;amp;1 &amp;gt;ls-output.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;则标准错误定向到屏幕。&lt;/p&gt;

&lt;h3&gt;新版 shell&lt;/h3&gt;

&lt;p&gt;现在的 bash 版本提供了第二种方法，更精简合理的方法来执行这种联合的重定向。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ls -l /bin/usr &amp;amp;&amp;gt; ls-output.txt 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在这个例子里面，我们使用单单一个表示法 &amp;amp;&gt; 来重定向标准输出和错误到文件 ls-output.txt。&lt;/p&gt;

&lt;h2&gt;结语&lt;/h2&gt;

&lt;p&gt;入门级别的学习，Θ_Θ。比起 《鸟哥的 Linux 私房菜》，推荐下面这个简短轻快的读物，见 Reference。&lt;/p&gt;

&lt;h2&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://billie66.github.io/TLCL/book/zh/chap07.html&quot;&gt;The Linux Command Line&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
   </entry>
   
   <entry>
     <title>CSS 预处理器  LESS vs SASS</title>
     <link href="http://webcraft.malei.tk/articles/less-vs-sass"/>
     <updated>2013-07-30T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/less-vs-sass</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;h3&gt;SASS 的前世今生&lt;/h3&gt;

&lt;p&gt;Sass是是一种基于ruby编写的CSS预处理器，诞生于2007年，是最早也是最成熟的一款CSS预处理器语言，它可以使用变量、嵌套、混入、继承，运算，函数等功能，使得CSS的开发，变得简单清晰可维护，同时也大大节省了设计者的时间，提高了效率。Sass最后还是会编译出合法的CSS让浏览器使用，也就是说它本身的语法并不太容易让浏览器识别，因为它不是标准的CSS格式，在它的语法内部可以使用动态变量等，所以它更像一种极简单的动态语言。&lt;/p&gt;

&lt;p&gt;其实现在的Sass已经有了两套语法规则：一个依旧是用缩进作为分隔符来区分代码块的；另一套规则和CSS一样采用了大括号（｛｝）作为分隔符。后一种语法规则又名SCSS，在Sass3之后的版本都支持这种语法规则。&lt;/p&gt;

&lt;p&gt;sass虽然是最早的，但是一开始还是不太好用，而且使用缩进作为分隔符，不符合css使用大括号的习惯，所以less以后起之秀的身份轻松赢得了人心，后来sass借鉴于less的一些思想，改进了自己的设计，并有了scss，然后经过几个版本的更新，特别版本3.2.0做了些革命性的更新，以使它从其他几个编译处理器中脱颖而出。&lt;/p&gt;

&lt;p&gt;由上面可见，有时太激进了，用户是不领情的，“步子走大了，容易...”，你懂的。不过现在类 sass 的写法还挺受欢迎的：HAML，Slim，CoffeeScript，jade，styleus等...&lt;/p&gt;

&lt;h3&gt;ㄟ(￣▽￣ㄟ)&lt;/h3&gt;

&lt;p&gt;下面主要是自己在这段时间的使用中遇到的...&lt;/p&gt;

&lt;h2&gt;比较&lt;/h2&gt;

&lt;h3&gt;calc&lt;/h3&gt;

&lt;p&gt;less 中使用 calc 有 bug，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;calc(100% - 8px);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;他会无情的给你解析成 92%，而在 sass 中没有问题。上一个比较 撮 的 demo：&lt;a href=&quot;http://codepen.io/malei0311/full/thAim&quot;&gt;click me&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;点击左下脚的 &lt;code&gt;edit&lt;/code&gt; ，把 calc() 法 中写在行内的 style calc，写入 less 中，靠，他变成 92%了&lt;/p&gt;

&lt;h3&gt;循环&lt;/h3&gt;

&lt;p&gt;虽然都能实现循环，但是 sass 使用起来更方便，例如 sass 中循环  for ，很简单，也方便。&lt;/p&gt;

&lt;h4&gt;sass demo:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;demo 地址: &lt;a href=&quot;/codepen/css-fibonacci/&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;demo 源码: &lt;a href=&quot;https://gist.github.com/malei0311/6099394&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在线调试: &lt;a href=&quot;http://codepen.io/malei0311/pen/IsfLm&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img src=&quot;/images/articles/less-vs-sass/css-fibonacci.png&quot; alt=&quot;css-fibonacci&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@for $i from 1 through $num {
  $temp: $i / 2 + 0px;

  .circle-#{$i} {  
    width: $temp;

    transform: rotate($i*137.5deg);
    &amp;amp;:after{
      animation-duration: 10s;
      animation-delay: 0.01s * $i;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;less demo:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;demo 地址: &lt;a href=&quot;/codepen/css-animation/&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;demo 源码: &lt;a href=&quot;https://gist.github.com/malei0311/6093738&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在线调试:  &lt;a href=&quot;http://codepen.io/malei0311/pen/eqyid&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;img src=&quot;/images/articles/less-vs-sass/css-animation-series-multi.png&quot; alt=&quot;css-animation-series-multi&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.loopingClass (@index,@father) when (@index =&amp;lt; @particles) {
  //这里需要一个恶心的 mixin + 关键字 when 实现一个条件判断，有木有 =。= !
  .father(@father) when (@father = demo1){
    .@{father} i:nth-child(@{index}) {

      @angle: @index / @particles * 360;      
      width: (@index * 14) + 0px;
      height: (@index * 14) + 0px;
      margin-top: -(@index * 14) / 2 + 0px;
      margin-left: -(@index * 14) / 2 + 0px;
      z-index: @particles - @index;
      transform:rotate( @angle + 0deg );

      transform-origin: 50% 50%;
      animation-delay: @index * (2s / @particles);
     }
  }

  .father(@father);
  .loopingClass(@index + 1, @father);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;条件判断&lt;/h3&gt;

&lt;p&gt;sass =&gt; if, less =&gt; when，下面两段代码，是 &lt;code&gt;上面循环&lt;/code&gt; 一节中 &lt;code&gt;less demo&lt;/code&gt; 的不同实现&lt;/p&gt;

&lt;p&gt;sass:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@mixin paintChild($father) {
  @for $i from 1 through $particles {
    .#{$father} i:nth-child(#{$i}) {
      @if $father == demo1 {
        $angle: $i / $particles * 360;

        width: ($i * 14) + px;
        height: ($i * 14) + px;
        margin-top: - ($i * 14) / 2 + px;
        margin-left: - ($i * 14) / 2 + px;
        z-index: $particles - $i;
        transform:rotate( #{$angle}deg );

        transform-origin: 50% 50%;
        animation-delay: $i * (2s / $particles);  
      } @else if $father == demo2 {
        ... // your code
      }
    }
  }
}

@include paintChild(demo1);
@include paintChild(demo2);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;less:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.loopingClass (@index,@father) when (@index =&amp;lt; @particles) {
  //这里需要一个恶心的 mixin + 关键字 when 实现一个条件判断，有木有 =。= !
  .father(@father) when (@father = demo1){
    .@{father} i:nth-child(@{index}) {

      @angle: @index / @particles * 360;      
      width: (@index * 14) + 0px;
      height: (@index * 14) + 0px;
      margin-top: -(@index * 14) / 2 + 0px;
      margin-left: -(@index * 14) / 2 + 0px;
      z-index: @particles - @index;
      transform:rotate( @angle + 0deg );

      transform-origin: 50% 50%;
      animation-delay: @index * (2s / @particles);
     }
  }
  .father(@father) when (@father = demo2){
    ... // your code
  }
  .father(@father);
  .loopingClass(@index + 1, @father);
}

.loopingClass (1, demo1);
.loopingClass (1, demo2);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;less会重复写 &lt;code&gt;.father(@father) when (...&lt;/code&gt; 有木有，另外，注意他们的单位计算方式，负号与后面有没有空格，与单位相加时怎么处理。&lt;/p&gt;

&lt;h2&gt;结语&lt;/h2&gt;

&lt;p&gt;萝卜白菜，各有所爱，不过还是觉的 sass 在某些方面比较方便，另外 chrome 中还可以直接调试。其次，也要看项目历史原因、团队偏好，为了易维护性以及项目的一致性，怎么选，你懂的。&lt;/p&gt;

&lt;h2&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://css-tricks.com/sass-vs-less/&quot;&gt;sass-vs-less&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sass-lang.com/docs/yardoc/_index.html&quot;&gt;SASS官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
   </entry>
   
   <entry>
     <title>A pure CSS demo Camera</title>
     <link href="http://webcraft.malei.tk/articles/css-camera"/>
     <updated>2013-07-28T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/css-camera</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;p&gt;用 pure css3 实现了一个相机，镜头会转动...&lt;/p&gt;

&lt;h2&gt;demo&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;demo 地址: &lt;a href=&quot;/codepen/pure-css-camera/&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;demo 源码: &lt;a href=&quot;https://gist.github.com/malei0311/6130923&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在线调试: &lt;a href=&quot;http://codepen.io/malei0311/pen/gBpuq&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;预览&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/pure-css-camera/pure-css-camera.png&quot; alt=&quot;css-camera&quot; /&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>Image 的用例</title>
     <link href="http://webcraft.malei.tk/articles/image%27s-usage"/>
     <updated>2013-07-25T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/image's-usage</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;p&gt;貌似话说 image 的应用还挺多的，这里不自量力的试着总结一下，难免遗漏...isMap 和 useMap 这里不涉及&lt;/p&gt;

&lt;h2&gt;属性 height &amp;amp;&amp;amp; width&lt;/h2&gt;

&lt;p&gt;为图像指定 height 和 width 属性是一个好习惯。如果设置了这些属性，就可以在页面加载时为图像预留空间。如果没有这些属性，浏览器就无法了解图像的尺寸，也就无法为图像保留合适的空间，因此当图像加载时，页面的布局就会发生变化。&lt;/p&gt;

&lt;p&gt;无论有没有指定 width 和 height，在 css 的作用下（重绘），img 的大小都会乖乖听 css 的，另外，如果只制定 height 和 width 的其中之一，他会按照您的意思等比例的缩放（无论是 css 中，还是 靠 height or width 属性，它都会听话）&lt;/p&gt;

&lt;h2&gt;获取 Image 的真实大小&lt;/h2&gt;

&lt;p&gt;前面说 image 能够缩放（虽然不推荐缩放），但是有时候我们并不知道 img 是否进行了缩放，并且我们很想知道他的真实大小。How to do ?&lt;/p&gt;

&lt;h3&gt;惯用的、并且支持屌丝浏览器的做法&lt;/h3&gt;

&lt;p&gt;用 Image 对象的方法，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var preloadImg = function(url,callback) {
  var img = new Image(); // HTML5 Constructor
  img.src = url;
  if(img.complete) {
    callback(img);
    return;
  }
  img.onload = function(){
    callback(img); // callback 你就可以任意操作了
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;do you know naturalWidth and naturalHeight ?&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;// 等所有资源都下载完
window.onload = function(){
  var img = document.querySelector('#img-test');
  console.log(img.naturalHeight,img.naturalWidth); // 图片本身的大小
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Image 在 timeout 中的应用&lt;/h2&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;h2&gt;Image ping ?&lt;/h2&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;h2&gt;img src xss ?&lt;/h2&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;h2&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bug257454.bugzilla.mozilla.org/attachment.cgi?id=157438&quot;&gt;test timeout mozilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jsperf.com/smallest-timeout&quot; title=&quot;or add /2&quot;&gt;Smallest timeout value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers&quot;&gt;WHATWG Timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement&quot;&gt;HTMLImageElement-MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wangxiao/jsping/blob/master/jsping.js&quot;&gt;js-ping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/TomXu/archive/2011/12/31/2289423.html&quot; title=&quot;严重推荐 汤姆大叔 系列&quot;&gt;立即调用的函数表达式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sofish.de/2138&quot;&gt;通过 img URL 实施 XSS 的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
   </entry>
   
   <entry>
     <title>css vertical align</title>
     <link href="http://webcraft.malei.tk/articles/css-vertical-align"/>
     <updated>2013-07-20T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/css-vertical-align</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;p&gt;垂直居中，自适应垂直居中的一些栗子 ╲⊙⊙╱&lt;/p&gt;

&lt;h2&gt;栗子&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;demo 地址: &lt;a href=&quot;/codepen/css-vertical-align/&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;demo 源码: &lt;a href=&quot;https://gist.github.com/malei0311/6119999&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在线调试: &lt;a href=&quot;http://codepen.io/malei0311/pen/mKGgn&quot;&gt;click me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;注：有的 demo 不支持，屌丝浏览器&lt;/p&gt;

&lt;h2&gt;各 demo 预览&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/css-vertical-align/demo1.png&quot; alt=&quot;demo1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/css-vertical-align/demo2.png&quot; alt=&quot;demo1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/css-vertical-align/demo3.png&quot; alt=&quot;demo1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/css-vertical-align/demo4.png&quot; alt=&quot;demo1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/css-vertical-align/demo5.png&quot; alt=&quot;demo1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/css-vertical-align/demo6.png&quot; alt=&quot;demo1&quot; /&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>background-origin and background-clip</title>
     <link href="http://webcraft.malei.tk/articles/background-origin-and-clip"/>
     <updated>2013-07-15T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/background-origin-and-clip</id>
     <content type="html">&lt;h2&gt;简介&lt;/h2&gt;

&lt;h3&gt;&lt;a href=&quot;http://www.w3.org/TR/css3-background/#background-origin&quot;&gt;background-origin&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;设置或检索对象的背景图像计算background-position时的参考原点(位置)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;默认值：padding-box
padding-box：从padding区域（含padding）开始显示背景图像。
border-box：从border区域（含border）开始显示背景图像。
content-box：从content区域开始显示背景图像。
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;&lt;a href=&quot;http://www.w3.org/TR/css3-background/#background-clip&quot;&gt;background-clip&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;指定对象的背景图像向外裁剪的区域。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;默认值：border-box
padding-box：从padding区域（不含padding）开始向外裁剪背景。
border-box：从border区域（不含border）开始向外裁剪背景。
content-box：从content区域开始向外裁剪背景。
text：从前景内容的形状（比如文字）作为裁剪区域向外裁剪，如此即可实现使用背景作为填充色之类的遮罩效果。
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;CODE&lt;/h2&gt;

&lt;p&gt;请使用 chrome，点击右上角的 edit on codepen 可更改测试&lt;/p&gt;

&lt;h3&gt;background-origin&lt;/h3&gt;

&lt;p&gt;如果有 &lt;code&gt;background-attachment&lt;/code&gt; 是 fixed ，那么 &lt;code&gt;background-origin&lt;/code&gt;  不生效，并且这里是相对于 html（root）偏移，测试这一项，把本行的 &lt;code&gt;fixed&lt;/code&gt; 的注释去掉，还有把 &lt;code&gt;#demo&lt;/code&gt; 和 &lt;code&gt;body&lt;/code&gt; 的 &lt;code&gt;margin&lt;/code&gt; 置成 &lt;code&gt;0&lt;/code&gt; ，效果明显。详细原因参见：http://www.w3.org/TR/CSS21/visudet.html#containing-block-details&lt;/p&gt;

&lt;pre class=&quot;codepen&quot; data-height=&quot;300&quot; data-type=&quot;result&quot; data-href=&quot;GBxzl&quot; data-user=&quot;malei0311&quot; data-safe=&quot;true&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;a href=&quot;http://codepen.io/malei0311/pen/GBxzl&quot;&gt;Check out this Pen!&lt;/a&gt;&lt;/pre&gt;


&lt;script async src=&quot;http://codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;


&lt;h3&gt;background-clip&lt;/h3&gt;

&lt;pre class=&quot;codepen&quot; data-height=&quot;300&quot; data-type=&quot;result&quot; data-href=&quot;tibDo&quot; data-user=&quot;malei0311&quot; data-safe=&quot;true&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;a href=&quot;http://codepen.io/malei0311/pen/tibDo&quot;&gt;Check out this Pen!&lt;/a&gt;&lt;/pre&gt;


&lt;script async src=&quot;http://codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;


&lt;h2&gt;结语&lt;/h2&gt;

&lt;p&gt;如果你不想让背景从边界泄漏，以下代码还是很有用的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;background-clip: padding-box;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;详细请参见：&lt;a href=&quot;http://tumble.sneak.co.nz/post/928998513/fixing-the-background-bleed&quot;&gt;Fixing the background 'bleed'&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>维护一个开源项目的小建议</title>
     <link href="http://webcraft.malei.tk/articles/tips-for-maintaining-an-open-source-library"/>
     <updated>2013-05-14T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/tips-for-maintaining-an-open-source-library</id>
     <content type="html">&lt;p&gt;大约在五个月前我们团队通过Hacker News发布了我们自己的JavaScript库 &lt;a href=&quot;https://github.com/segmentio/analytics.js&quot;&gt;Analytics.js&lt;/a&gt;，在刚发布的几个小时内一只排名第一的好成绩，并且在一天里它的评分从最初的20星突破了1000星。从这件事上我们学到了非常多的管理开源项目的技巧。所以我想把其中一些有用的技巧分享给大家。&lt;/p&gt;

&lt;p&gt;起初，我们对管理一个开源项目一无所知。甚至我认为我们在pull之前没有任何merge别人代码的资格。所以我们不得不快速学习。&lt;/p&gt;

&lt;p&gt;从最初我们发布Analytics.js超过2000个星至今，非常多的人在开源社区做出了惊人的贡献。在此期间我们学会了很多关于如何保持高质量的pull以及如何为贡献者简化开发流程的技巧。&lt;/p&gt;

&lt;h2&gt;保持编码风格的统一&lt;/h2&gt;

&lt;p&gt;新的开发者将会从现有的代码库中学习如何为库增添新的功能，而这才是他们应该做的事情。所有的开发者都想按照代码库的规范去增加新的功能而不是他们自己的规范。你的主要工作就是使这种规范尽可能的简单。新的开发者将会从现有的代码库中学习如何为库增添新的功能，而这才是他们应该做的事情。所有的开发者都想按照代码库的规范去增加新的功能而不是他们自己的规范。作为一个开源项目的维护着主要工作就是使以上情况尽可能的简单。&lt;/p&gt;

&lt;p&gt;当你的分支代码和核心代码表意含糊不清时无数的麻烦就来了，如果你在两个不同的地方用两种不同的方式做同一件事情，开发者怎么知道哪一种方式才是推荐的呢？答案是：他们不知道。&lt;/p&gt;

&lt;p&gt;更糟糕的是由于你的编码风格不统一，开发者无从决定，那么也会编码不统一（按自己的偏好来）。&lt;/p&gt;

&lt;p&gt;解决这个问题你需要花费很多的时间规范代码风格。作为一个准则，你不应该尝试在一个简单的开源库中用两种不同的方式。如果你一定要改变风格，那一定要迅速的在全球都改变。否则新人将无法区分你之前代码和现有代码的约定。&lt;/p&gt;

&lt;p&gt;我们一开始用一种很差劲的方式处理这个问题，所有的代码在一个文件里面，函数没有一个良好的结构组织。（并且如果你检查我们的提交，就必须先理清代码）我们在设计代码规范统一上没有花时间，所以库里的代码编写风格混杂不堪。&lt;/p&gt;

&lt;p&gt;当pull代码的时候我们每个人都与别人的代码发生冲突，因为每个人都修改了同一个文件，并且在他们想要介入新函数的地方加入自己的功能函数&lt;/p&gt;

&lt;h2&gt;使用正确的方法，简单的方法&lt;/h2&gt;

&lt;p&gt;最初我们构建代码的方式，导致在合并pull requests的时候遇到了许多问题：换句话说，刚开始我们的代码就没有结构。我们做出的改善代码结构的比较大的改变之一是使用 &lt;a href=&quot;https://github.com/component/component&quot;&gt;Component&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://segment.io/blog/posts/2013-05-09-tips-for-maintaining-an-open-source-library/component.png&quot; alt=&quot;Component&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们喜欢 Component 因为它消除了编码风格不统一的问题，减少了代码库的规模。Component 使用 &lt;a href=&quot;http://zh.wikipedia.org/wiki/CommonJS&quot;&gt;CommonJS&lt;/a&gt;，所以我们只需要在我们需要的地方，引入我们需要的模块即可。所有的事情都简单明了，这就意味着我们的代码对于新人来说更容易跟进。这是代码库维护者的梦想。&lt;/p&gt;

&lt;p&gt;在进行切换期间，我们写了一堆自己的组件来替换已经附在全局对象 analytics 上的通用函数。现在，组件可以在库的任何地方很简单的包含进来和使用，pull requesters 只是默认使用他们。&lt;/p&gt;

&lt;p&gt;自从我们发布了正确的方法，并且使他更加清晰，pull request 的代码质量获得了显著提升。&lt;/p&gt;

&lt;p&gt;为了尽可能保持统一编码风格的延续，当有新的代码提交上来的时候，你必须积极主动。不要害怕给 pull request 的代码添加注释，即使看起来只是一处很小的更正，也不要害怕拒绝不必要的可能会搞乱你的 API 的 requests。&lt;/p&gt;

&lt;p&gt;必须牢记的是，同样要严格要求自己的代码。如果在添加新特性时，自己开小差，懒得统一编码风格，为什么项目的贡献者不可以呢？总之。你的代码越干净，对于新手来说就有越多的例子学习。&lt;/p&gt;
</content>
   </entry>
   
 
</feed>
