<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
   <title>WebCraft</title>
   <link href="http://webcraft.malei.tk/atom.xml" rel="self" type="application/atom+xml"/>
   <link href="http://webcraft.malei.tk" rel="alternate" type="text/html" />
   <updated>2012-10-23T22:54:31+08:00</updated>
   <id>http://webcraft.malei.tk</id>
   <author>
     <name>Lei Ma</name>
     <email>leiman0311@gmail.com</email>
   </author>

   
   <entry>
     <title>Windows 7版本IE10浏览器11月中旬推出</title>
     <link href="http://webcraft.malei.tk/articles/win7-ie10"/>
     <updated>2012-10-23T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/win7-ie10</id>
     <content type="html">&lt;p&gt;微软公司表示，11月中旬时，会推出针对Windows 7的Internet Explorer 10浏览器（简称IE10）预览版本。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/win7-ie10/ie.png&quot; title=&quot;IE10&quot; alt=&quot;IE10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;根据微软的说法，Windows 7版本IE10的平台标准和Windows 8版本IE10是一样的。&lt;/p&gt;

&lt;p&gt;很期待，传说中某些方面比 Chrome 还要快的IE10，等win7版的IE10出来后一定要马上试用。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>insertAfter()?</title>
     <link href="http://webcraft.malei.tk/articles/js-insertAfter"/>
     <updated>2012-09-25T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/js-insertAfter</id>
     <content type="html">&lt;h2&gt;直接写&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;var referenceNode=document.getElementById('foo');
var node=document.createElement('div');
var nodeText=document.createTextNode('hello world!');
node.appendChild(nodeText);

referenceNode.parentNode.insertBefore(node,referenceNode.nextSibling);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;函数1&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;function insertAfter(node, referenceNode){
    var parent = referenceNode.parentNode;

    if(parent.lastChild == referenceNode){
        parent.appendChild(node);
    }
    else{
        parent.insertBefore(node,referenceNode.nextSibling);
    }            
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;函数2&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;function insertAfter(node, referenceNode){
    var parent = referenceNode.parentNode,v;
    (v=referenceNode.nextSibling)?parent.insertBefore(node,v):parent.appendChild(node);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;函数3&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;function insertAfter(node,referenceNode){
    referenceNode.parentNode.insertBefore(node,referenceNode.nextSibling);
}
&lt;/code&gt;&lt;/pre&gt;
</content>
   </entry>
   
   <entry>
     <title>browsers</title>
     <link href="http://webcraft.malei.tk/articles/browsers"/>
     <updated>2012-09-25T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/browsers</id>
     <content type="html">&lt;p&gt;目前只用过Chrome, firefox, IE, Opera。其他的一些浏览器没用过，有的甚至没听过。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/browsers.jpg&quot; title=&quot;browsers&quot; alt=&quot;browsers&quot; /&gt;&lt;/p&gt;

&lt;p&gt;自认为，没必要为老旧的IE系列做兼容，未来是乐观的，所有的浏览器都应该标准化。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>Java vs JavaScript</title>
     <link href="http://webcraft.malei.tk/articles/java-vs-javascript"/>
     <updated>2012-09-21T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/java-vs-javascript</id>
     <content type="html">&lt;h2&gt;一张趣图&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/java-vs-javascript/java-vs-javascript.png&quot; title=&quot;Java vs JavaScript&quot; alt=&quot;Java vs JavaScript&quot; /&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>img 中alt和tittle的区别</title>
     <link href="http://webcraft.malei.tk/articles/the-diff-between-alt-and-title"/>
     <updated>2012-09-14T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/the-diff-between-alt-and-title</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;p&gt;简单的理解：
alt：  图片显示不出来了就显示alt的属性值
title：鼠标划过图片显示的提示&lt;/p&gt;

&lt;h2&gt;alt属性&lt;/h2&gt;

&lt;p&gt;使用alt属性是为了给那些不能看到你文档中图像的浏览者提供文字说明。这包括那些使用本来就不支持图像显示或者图像显示被关闭的浏览器的用户，视觉障碍的用户和使用屏幕阅读器的用户。替换文字是用来替代图像而不是提供额外说明文字的。在写替换文字前仔细想想，保证那些文字确实为那些看不到图像的人提供了说明信息，并且在上下文中有意义。对于那些装饰性的图片可以使用空的值(alt=&quot;&quot;，引号中间没有空格)，而不是使用不相关的替换文字比如“foo”或者“foo.gif”。不要忽略它，如果你忽略了，那么一些屏幕阅读器会直接阅读图像文件的文件名，那些文字浏览器，比如Lynx会显示图像文件的文件名，而那对于你的浏览者就没什么用了。包含文字的图像图片设置替换文字是最简单的，图像中包含的文字一般来说就可以作为alt属性值。&lt;/p&gt;

&lt;h2&gt;title属性&lt;/h2&gt;

&lt;p&gt;title属性有一个很好的用途，即为链接添加描述性文字，特别是当连接本身并不是十分清楚的表达了链接的目的。这样就使得访问者知道那些链接将会带他们到什么地方，他们就不会加载一个可能完全不感兴趣的页面。对于img标签，title是对图片的说明和额外补充，如果需要在鼠标经过图片时出现文字提示应该用属性title。&lt;/p&gt;

&lt;h2&gt;测试&lt;/h2&gt;

&lt;p&gt;一段简单的代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;img src=&quot;&quot; alt=&quot;test&quot; title=&quot;i'm a title&quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;chrome中的显示效果&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/img-alt-vs-title/chrome.png&quot; title=&quot;chrome中的显示效果&quot; alt=&quot;chrome&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;firefox中的显示效果&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/img-alt-vs-title/firefox.png&quot; title=&quot;firefox中的显示效果&quot; alt=&quot;firefox&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;ie9中的显示效果&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/articles/img-alt-vs-title/ie9.png&quot; title=&quot;ie9中的显示效果&quot; alt=&quot;ie9&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;SEO&lt;/h2&gt;

&lt;p&gt;搜索引擎对图片意思的判断，主要靠alt属性。所以在图片alt属性中以简要文字说明，同时包含关键词，也是页面优化的一部分。条件允许的话，可以在title属性里，进一步对图片说明。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>mysql拷贝表</title>
     <link href="http://webcraft.malei.tk/articles/mysql-copy-table"/>
     <updated>2012-09-12T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/mysql-copy-table</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;p&gt;现在每个表都是按用户的意愿生成的，每个表的字段大体上相同，但是会有一两个不同的字段，该怎么做？&lt;/p&gt;

&lt;h2&gt;几种拷贝表的方式&lt;/h2&gt;

&lt;h3&gt;拷贝表结构到新表中&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE new LIKE origin;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;拷贝数据到新表中&lt;/h3&gt;

&lt;p&gt;注意：这个语句其实只是把select语句的结果建一个表。所以 new 这个表不会有主键，索引。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE new AS   
(   
    SELECT *   
    FROM origin   
); 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;真正的复制一个表&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE new LIKE origin;   
INSERT INTO new SELECT * FROM origin;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;操作不同的数据库&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE new LIKE shop.origin;   
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;新建的表的字段改名&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE new AS   
(   
    SELECT id, username AS uname, password AS pass FROM origin   
);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;实现&lt;/h2&gt;

&lt;p&gt;因为表中的字段大部分相同，所以需要找出相同的字段&lt;/p&gt;

&lt;h3&gt;获取表中的字段&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;        //获取表字段信息
    public function getColumnName($tableName){
        $sql=&amp;lt;&amp;lt;&amp;lt;EOF
        select COLUMN_NAME from INFORMATION_SCHEMA.COLUMNS where table_name=&quot;$tableName&quot;;
EOF;
        $queryResult=$this-&amp;gt;pdo-&amp;gt;query($sql);
        $resultArray=array();
        $rows=$queryResult-&amp;gt;fetchAll(PDO::FETCH_ASSOC);
        foreach ($rows as $row) {
            $resultArray[]=$row['COLUMN_NAME'];
        }
        return $resultArray;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;找出相同的字段，然后拷贝&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;        /**
     * [copyDataToNewTable 拷贝上一个月表中的数据]
     * @param  [string] $oldTableName [上一个月原表]
     * @param  [string] $newTableName [新表]
     * @return [boolean]              [返回值]
     */
    public function copyDataToNewTable($oldTableName,$newTableName){
        $whatIWant=array();
        $columnName_oldTable=$this-&amp;gt;getColumnName($oldTableName);
        $columnName_newTable=$this-&amp;gt;getColumnName($newTableName);
        foreach ($columnName_oldTable as $key1 =&amp;gt; $value1) {
            foreach ($columnName_newTable as $key2 =&amp;gt; $value2) {
                if($columnName_oldTable[$key1]==$columnName_newTable[$key2]){
                    $whatIWant[]= $columnName_oldTable[$key1];
                }
            }
        }
        $whatIWant_result=join(&quot;,&quot;,$whatIWant);
        $sql=&amp;lt;&amp;lt;&amp;lt;EOF
        insert  into `$newTableName`($whatIWant_result) select $whatIWant_result from `$oldTableName`;
EOF;
        $queryResult=$this-&amp;gt;pdo-&amp;gt;exec($sql);
        if($queryResult)
        {
            return true;
        }
        else{
            return false;
        } 
    }
&lt;/code&gt;&lt;/pre&gt;
</content>
   </entry>
   
   <entry>
     <title>sublime text 2 插件使用</title>
     <link href="http://webcraft.malei.tk/articles/sublime-text-2"/>
     <updated>2012-09-10T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/sublime-text-2</id>
     <content type="html">&lt;p&gt;//TODO:&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>该怎么做？</title>
     <link href="http://webcraft.malei.tk/articles/how-to-do"/>
     <updated>2012-08-29T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/how-to-do</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;p&gt;停留在实验室中的永远不能算是产品，主观臆断的东西极有可能不能满足用户的需求，做产品一定要明确针对人群，明确需求。详情请 &lt;a href=&quot;http://blog.sina.com.cn/s/blog_56c35a550102dyl6.html&quot; title=&quot;成都出租车司机给我上的一课&quot;&gt;click me&lt;/a&gt; 。&lt;/p&gt;

&lt;h2&gt;小摘抄&lt;/h2&gt;

&lt;p&gt;首先，每次登陆微信，没在线这段时间的消息就会不停的弹出一大堆。用过微信群聊的朋友们应该会深有体会，尤其是群成员超过10个以上时，再加上有几个话唠，看完这些消息挺费劲。对于他们出租车司机来说，他们只需要及时聊天，并不需要看过去别人的聊天信息。&lt;/p&gt;

&lt;p&gt;其次，微信的通知挺烦，不停的响。他们这个行业，24小时都有人在工作，在聊天，形成打扰。我提醒他说微信有免打扰设置。他说他知道，可是那功能不好使。这个我也深有体会，确实不好使。有天半夜，我微信某个群组里的几个哥们聊的热火朝天，手机不停的在响，我睡觉很死，没听到，结果媳妇从隔壁房间冲过来关掉了我的手机，说打扰女儿睡觉了。我设置了微信的夜间免打扰功能，可惜这个功能确实很烂。&lt;/p&gt;

&lt;p&gt;第三，A产品设置几乎不用手操作，对司机很方便，而微信，和每个人聊天都要去按，去切换。另外，A产品有个功能是按下手机侧面的声音键就可以聊天，单手即可操作，且不需要眼睛去看；不像微信，需要去按产品界面上的按钮，一般需要双手操作，还需要眼睛去看。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>JQuery插件之tags的3D旋转球制作</title>
     <link href="http://webcraft.malei.tk/articles/3D-jquery"/>
     <updated>2012-08-18T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/3D-jquery</id>
     <content type="html">&lt;h2&gt;总述&lt;/h2&gt;

&lt;p&gt;这是学习JQuery插件制作的一次有意义的实践&lt;/p&gt;

&lt;h2&gt;声明&lt;/h2&gt;

&lt;p&gt;参考自 &lt;a href=&quot;http://www.miaov.com&quot;&gt;妙味课堂&lt;/a&gt; 的原生js，我的工作只不过是做成了JQuery插件。&lt;/p&gt;

&lt;h2&gt;对象级别的插件开发&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;(function ($) {
    $.fn.extend({
        pluginName:function(opt,callback){

        }
    });
})(jQuery);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(function ($) {
    $.fn.pluginName=function(){

    }
})(jQuery);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面定义了一个jquery函数，形参是$，然后把实参jquery传进去，立即调用执行。好处：在写jquery插件时，也可使用$这个别名，而不会与prototype引起冲突。&lt;/p&gt;

&lt;h2&gt;先看一个五脏俱全的小例子&lt;/h2&gt;

&lt;h3&gt;插件代码&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/*+++++++++++++++++声明 Start++++++++++++++
 *|                                       |
 *|   以下代码来自 ITEYE 的 gaojiewyh     |
 *|                                       |
 *+++++++++++++++++声明 End++++++++++++++++
 */
(function ($) {
    $.fn.hilight=function(options){
        debug(this);
        var opts=$.extend({},$.fn.hilight.defaults,options);
        return this.each(function(){
            var $this=$(this);
            $this.css({
                backgroundColor:opts.background,
                color:opts.foreground
            });
            var markup=$this.html();
            markup=$.fn.hilight.format(markup);
            $this.html(markup);
        });
    };
    //适当暴露一些函数
    $.fn.hilight.format=function(txt){
        return '&amp;lt;strong&amp;gt;'+txt+'&amp;lt;/strong&amp;gt;';
    }
    //暴露默认设置
    $.fn.hilight.defaults={
        foreground:'red',
        background:'yellow'
    };
    //保持私有函数的私有性
    function debug($obj){
        if(window.console &amp;amp;&amp;amp; window.console.log){
            window.console.log('hilight selection count:'+$obj.size());
        }
    }
})(jQuery);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;应用&lt;/h3&gt;

&lt;p&gt;1.采用默认设置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(&quot;.test&quot;).hilight();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.自定义设置一&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$.fn.hilight.defaults.background='green';
$(&quot;.test&quot;).hilight();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.自定义设置二&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(&quot;.test&quot;).hilight({
    foreground:'black',
    background:'gray'
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;3D旋转球插件制作&lt;/h2&gt;

&lt;p&gt;提供“转速”和“旋转半径”的自定义&lt;/p&gt;

&lt;h3&gt;所需文档结构&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&quot;threeDTags&quot;&amp;gt;
    &amp;lt;a href=&quot;#&quot;&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;a href=&quot;#&quot;&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;a href=&quot;#&quot;&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;!-- ... n个 ... --&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;所需类库及样式表&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;jquery.min.js&lt;/li&gt;
&lt;li&gt;jquery.threeDTags.js&lt;/li&gt;
&lt;li&gt;threeDTags.css&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ps:threeDTags.css并不存在，因为是个人应用，没有把相应的css独立出来&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#threeDTags{
    position: relative;
    width: 270px;
    height: 270px;
}

#threeDTags a {
    position:absolute; 
    top:0px; 
    left:0px; 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;相对来说，这几句是比较重要的，想要什么效果，自己扩展。&lt;/p&gt;

&lt;h3&gt;应用&lt;/h3&gt;

&lt;p&gt;应用通以上三种用法，这里只写一种。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$('threeDTags').threeDTags({
    radius:60,//半径
    tspeed:8//转速
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;FAQ&lt;/h2&gt;

&lt;h3&gt;如何获取鼠标相对于某个元素的位置?&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;document.getElementById('threeDTags').onmouseover=function (ev)
{
    var oEvent=window.event || ev;
    var mouseX,mouseY;

    mouseX=oEvent.clientX-($(this).offset().left-$(window).scrollLeft()+this.offsetWidth/2);
    mouseY=oEvent.clientY-($(this).offset().top-$(window).scrollTop()+this.offsetHeight/2);

    alert(mouseX+&quot; vs &quot;+mouseY);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了打破各家浏览器的浮动差异，以及 &lt;code&gt;document.getElementById('threeDTags').offsetLeft&lt;/code&gt; 相对于父元素(如果父元素 &lt;code&gt;position；relative&lt;/code&gt;)，而不是相对于整个文档的偏移，于是用了jquery类库。&lt;/p&gt;

&lt;p&gt;jquery中 &lt;code&gt;.offset()&lt;/code&gt; 为匹配的元素集合中获取第一个元素的当前坐标，相对于文档（document）。&lt;/p&gt;

&lt;h2&gt;结语&lt;/h2&gt;

&lt;p&gt;第一次写插件，代码相对混乱，但是会不断优化的。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>仿 SAE 的收藏夹图标，做了一个 Pure CSS 的版本</title>
     <link href="http://webcraft.malei.tk/articles/sae-cloud-icon"/>
     <updated>2012-08-17T00:00:00+08:00</updated>
     <id>http://webcraft.malei.tk/articles/sae-cloud-icon</id>
     <content type="html">&lt;h2&gt;效果预览&lt;/h2&gt;

&lt;p&gt;在&lt;a href=&quot;/about.html&quot; title=&quot;关于我&quot;&gt;About&lt;/a&gt;界面的 Feb. 2012 的 SAE&lt;/p&gt;

&lt;h2&gt;一个 span 搞定&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span class='cloud-icon'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;添砖加瓦&lt;/h2&gt;

&lt;h3&gt;span 主体：底座&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;.cloud-icon{
    width: 266px;
    height: 115px;
    float:left;
    background:#555;
    border-radius: 60px;
    -moz-border-radius:60px;
    -webkit-border-radius: 60px;
    -ms-border-radius:60px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;右边突出比较大的部分&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;.cloud-icon::before{
    position:relative;
    content:'';
    left: 82px;
    top: -82px;
    width: 130px;
    height: 130px;
    float:left;
    background:#555;
    border-radius:65px;
    -moz-border-radius:65px;
    -webkit-border-radius: 65px;
    -ms-border-radius:65px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;左边突出比较小的部分&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;.cloud-icon::after{
    position:relative;
    content:'';
    left: -98px;
    top: -38px;
    width: 70px;
    height: 70px;
    float:left;
    background: #555;
    border-radius:35px;
    -moz-border-radius:35px;
    -webkit-border-radius: 35px;
    -ms-border-radius:35px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;结语&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;云已完成，完整的显示，需要调父元素的 &lt;code&gt;padding&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float&lt;/code&gt; 当该属性不等于none引起对象浮动时，对象将被视作块对象(&lt;code&gt;block-level&lt;/code&gt;)，即display属性等于block。也就是说，浮动对象的display特性将被忽略。 该属性可以被应用在非绝对定位的任何元素上。&lt;/li&gt;
&lt;/ul&gt;

</content>
   </entry>
   
 
</feed>
